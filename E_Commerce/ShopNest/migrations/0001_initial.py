# Generated by Django 5.0.2 on 2024-04-30 10:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Adresse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("strasse", models.CharField(max_length=255)),
                ("hausnummer", models.CharField(max_length=50)),
                ("plz", models.CharField(max_length=20)),
                ("land", models.CharField(max_length=50)),
                ("stadt", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Artikelkategorie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            (1, "Lebensmittel"),
                            (2, "Getränke"),
                            (3, "Kleidung"),
                            (4, "Haushaltswaren"),
                            (5, "Backwaren"),
                            (6, "Werkzeuge"),
                            (7, "Möbel"),
                            (8, "Küche"),
                            (9, "Bücher"),
                            (10, "Sport"),
                            (11, "Technik"),
                            (12, "Sonstiges"),
                            (13, "Drogerieartikel"),
                            (14, "Snacks und Süßigkeiten"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Artikel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("beschreibung", models.TextField()),
                (
                    "preis_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "EUR €"), ("USD", "USD $")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "preis",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, default_currency="EUR", max_digits=10
                    ),
                ),
                ("bild", models.ImageField(upload_to="")),
                ("artikelnummer", models.CharField(max_length=255)),
                ("anzahl", models.IntegerField(default=0)),
                (
                    "artikelkategorie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ShopNest.artikelkategorie",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BestellteArtikel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "artikel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ShopNest.artikel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bestellung",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gesamtsumme_currency",
                    djmoney.models.fields.CurrencyField(
                        choices=[("EUR", "EUR €"), ("USD", "USD $")],
                        default="EUR",
                        editable=False,
                        max_length=3,
                    ),
                ),
                (
                    "gesamtsumme",
                    djmoney.models.fields.MoneyField(
                        decimal_places=2, default_currency="EUR", max_digits=15
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (1, "Bestellt"),
                            (2, "In Bearbeitung"),
                            (3, "In Lieferung"),
                            (4, "Abgeschlossen"),
                            (5, "Abgelehnt"),
                            (6, "Storniert"),
                        ],
                        max_length=50,
                    ),
                ),
                ("datum", models.DateTimeField(auto_now_add=True)),
                ("bestellnummer", models.CharField(max_length=50)),
                (
                    "zahlungsart",
                    models.CharField(
                        choices=[
                            (1, "Kreditkarte"),
                            (2, "PayPal"),
                            (3, "Lastschrift"),
                            (4, "Klarna"),
                        ],
                        max_length=50,
                    ),
                ),
                ("artikelanzahl", models.IntegerField()),
                (
                    "adresse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ShopNest.adresse",
                    ),
                ),
                (
                    "artikel",
                    models.ManyToManyField(
                        through="ShopNest.BestellteArtikel", to="ShopNest.artikel"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bestellteartikel",
            name="bestellung",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ShopNest.bestellung"
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("geburtstag", models.DateField(blank=True, null=True)),
                (
                    "profilbild",
                    models.ImageField(
                        blank=True, null=True, upload_to="profilbilder/ShopNest/"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Bewertung",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bewertung", models.IntegerField()),
                ("kommentar", models.TextField()),
                ("datum", models.DateTimeField(auto_now_add=True)),
                (
                    "artikel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ShopNest.artikel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bestellung",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="adresse",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
